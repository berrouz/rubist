Q1 Объясните почему происходит следующее:
 
1660 / 100 ≠ 16.6 
24.0 * 0.1 ≠ 2.4
- операция деления с числами Fixnum происходит с усечение(truncation) результата до целого.
- операция, которая производятся с использованием типа данных Float. Как известно, такие числа не позволяют производить вычисления с гарантированной точностью, 
то есть при использовании Float могут возникать погрешности, обусловленные не аппаратной ошибкой, а способом представления данного типа данных.

Как представить число 0.1 в двоичной форме? 

Это число нельзя точно представить с помощью ограниченного числа бит. Поэтому, Float использует округление. 
То есть 0.1 на самом деле выглядит вот так 1.00000000000000005551115123126E-1 и если округлить то получится не 24 а 2.4000000000000004(если округлять).


Q2
Нужно написать прослойку между почтовым сервером и front-end приложением 
(Flash AS3 Application). Опишите следующие моменты: 
• Какой формат обмена данными вы бы использовали, для минимального трафико-обмена? 
• В чем плюсы выбранного вами формата? 
• Какие бы технологии вы использовали? 

JSON - очень лаконичный формат, который, собственно и  требует минимального обмена трафиком. 
+ легко преобразовывать в последовательную форму(serialization)
+ доступный интерфейс API
+ поддержка многими библиотеками JavaScript(jQuery, Prototype, Dojo, MooTools)
+ поддержка большинством современных браузеров
+ читабельность
Технологии:
Можно было бы использовать ajax если это оправдано. 

Q3
Объясните в чем разница в использовании тредов (threads) и форков (forks). В каких 
случаях, какой вариант более предпочтительный для использования? Как можно 
профилировать и проводить дебаг приложений с использованием тредов? 


Q4
Расскажите как можно организовать работу кода в Ruby в асинхронном режиме? 



Q5
Напишите скрипт grab.rb принимающий на вход 2 параметра, например так: 
./grab.rb 'www.google.com' /tmp
Скрипт должен скачать все картинки, содержащиеся на странице, указанной 
первым параметром, в папку, указанную вторым параметром. Скрипт может 
использовать модули, находящиеся в той же папке, что и сам скрипт.  
Дополнительные условия: скрипт должен максимально загрузить доступный канал и 
отрабатывать как можно быстрее.



Q5
Покройте код предыдущей задачи тестами (плюсом будет использование rspec). 